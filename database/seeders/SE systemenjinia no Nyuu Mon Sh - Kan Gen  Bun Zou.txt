目次


目次

1はじめに

2システムエンジニアとは

2.1社内SE

2.1.1主な業務内容

2.1.2具体的な就職先

2.1.3年収モデルケース

2.1.4メリット

2.1.5デメリット

2.2SE（システムエンジニア）

2.2.1主な業務内容

2.2.2具体的な就職先

2.2.3年収モデルケース

2.2.4メリット

2.2.5デメリット

2.3PG（プログラマー）

2.3.1主な業務内容

2.3.2具体的な就職先

2.3.3年収モデルケース

2.3.4メリット

2.3.5デメリット

3プロジェクトの流れ

3.1プロジェクト発足の流れ

3.2新規案件の獲得

3.3RFIによる業務要件整理

3.4RFCによる調達仕様整理

3.5RFPによるベンダー整理

3.6入札確定以降

3.6.1要件定義

3.6.2基本設計

3.6.3詳細設計

3.6.4構築

3.6.5テスト

3.6.6運用・保守

4プロジェクトの体制

4.1よくあるプロジェクト体制

4.2マネージメント系

4.2.1PM（プロジェクトマネージャー）

4.2.2PMO（プロジェクトマネージメントオフィス）

4.3技術系

4.3.1ネットワークエンジニア

4.3.2サーバーエンジニア

4.3.3データベースエンジニア

4.3.4クラウドエンジニア

4.3.5セキュリティエンジニア

4.4どのポジションにつけるのか

4.4.1PMのなり方

4.4.2PMOのなり方

4.4.3技術系エンジニアのなり方

5SEの資格

5.1資格の種類

5.1.1国家資格

5.1.2ベンダー資格

5.2オススメの資格

5.2.1基本情報技術者（国家資格）

5.2.2PMP（ベンダー資格）

5.2.3技術特化系資格（ベンダー資格）

5.3資格を取得するメリット

5.4資格を取得するデメリット

5.5資格は本当に必要なのか

6SEのギモン

6.1SEのよくある質問

6.1.1勤務時間について

6.1.2勤務場所について

6.1.3人について

6.1.4キャリアについて

6.1.5転職先について

6.1.6ITコンサルタントとの違いについて

7契約形態の違い

7.1契約内容

7.1.1派遣契約

7.1.2準委任契約

7.1.3請負契約

7.1.4業務委託契約と濁す契約

7.2契約内容の違いまとめ

7.3契約内容には注意

8あとがき

8.1さいごに

8.2自己紹介

8.3奥付





第1章

　本書の目的、対象者について





1 はじめに


本書はSE（システムエンジニア）がどのような仕事をしているのか、どのような流れで業務を遂行していくのかなど、SEの仕事内容やキャリア関連を簡単に説明しています。



主な対象者としては、

● システム系企業に就職を考えている学生

● 新しくIT関連と仕事をするようになったIT初心者の人

● システムエンジニアやITコンサルタントとして働く1年目～5年目くらいの若手社会人

を中心としています。

この本を読むことで、業務の前提知識が手に入るので実際の仕事ですぐに活躍しやすくなります。また、SEとして働く上での目標設定の参考にもなるでしょう。



筆者は、外資系IT企業にインフラエンジニアとして就職し、現在ITを中心としたコンサルティング企業で現役コンサルタントとして活躍しております。社内の情報システム部門として働いていた時期もあるのでその観点からの説明もします。



20社以上の企業を顧客としてきた経験から、個人的な意見だけではなく、IT業界の一般的な内容を中心に紹介してくので是非参考にしてください。





第2章

　システムエンジニアとは





2 システムエンジニアとは


　システムエンジニアといってもIT系エンジニアの中には似たような職種が存在しています。その中でもよく混合される、システムエンジニア（以降SE）と社内SE、プログラマー（以降PG）は下記のような役割分担があります。





図 2.1.1‑1　エンジニア役割分担





2.1 社内SE


社内SEとは、情報システム部門として社内の内勤として勤務することになります。そのため、外出することも少なく、自社内の社員を相手にすることが中心です。社内SEの主な業務は主に3種類に分類されます。





2.1.1 　主な業務内容


どのような業務かを一つ一つ簡単に説明していきます。



● ヘルプデスク

社内SEの中心業務です。

社内からの問い合わせ対応や、社員用のPC設定など困りごとへの電話・メール対応です。



IT企業ではない場合や、企業内の年齢層が高い場合など社内のITリテラシー（IT操作能力）が低いと、面倒なヘルプデスクが多くなってしまいます。しかし、幅広い業務が経験できることと、様々な人と関われることが特徴です。



● 社内インフラ構築

社内のネットワーク・サーバー・外部サービスなどの社内インフラ環境の構築を担当します。

例えば、自社において新しい部署や建物が追加されるときに、インフラ（ネットワーク・サーバー・アプリケーション等）の構築を担当するのが社内SEです。



基本的には、新しいインフラ構築に必要な要件をまとめて外注します。外注先はシステムインテグレータ（以降SIer【エスアイヤーと読みます】）企業とやりとりをして、構築をお願いしていきます。



いろんなことをSIerからヒアリングされるため、基本的なIT技術について知っていないと会話になりません。ある程度の知識が必要になります。



● 社内インフラ運用・保守

既に社内に出来上がっているインフラの運用・保守業務を行います。場合によってはこの業務を外注していることもあります。



社内のイントラサイト（社内向けのインターネット、【ポータル】と呼ばれることもよくある）への機能追加や、トラブル時の対応、定期的な点検などを業務とします。

また、社員用のPCのセットアップ、トラブル対応も対応します。





2.1.2 　具体的な就職先


　情報システム部門のような部署が設置されている企業です。従って、世の中のほとんどの企業が就職先です。



就職先によっては気色がかなり変わってきます。情報システム部門とは別に情報企画部や情報戦略部のような経営寄りの部署を作っている企業もあるので、そのような部署であれば、ヘルプデスクのような一般ユーザー向けの手助けを担当することはありません。

社内の新しいIT技術・機器の導入などについて社内の上位層と経営視点からの提案やディスカッションを行います。そうして賛同されたものを自分がリーダーとなって社内に導入します。情報システム部門よりも影響力のあることに関われるようになります。



逆に、完全に分業されたヘルプデスク専門のような部署に配属されてしまっては、コールセンターと似たような業務をやらされたり、社内サーバーのアップデートのために深夜対応をしたりすることも多いです。

ヘルプデスク専門の部署は、純粋にIT技術を鍛えたいというような人には向いていないでしょう。





2.1.3 年収モデルケース


まず社内SEの年収を説明する前に前提として、企業においてはコストセンターとプロフィットセンターという考え方が存在します。



コストセンターとは、企業において利益を生み出さない部門のことで、収益の支援側の部門のことです。総務、人事、経理、情報システム部などが該当します。



プロフィットセンターとは、企業において利益を生み出す部門のことで、企業にとって利益を生み出す活動を担う部門のことです。営業、SE、製造部などが該当します。



この考え方からするとコストセンターである情報システム部門はプロフィットセンターと比較すると年収は低くなってしまう傾向になります。

また、情報システム部門というとヘルプデスクや運用・保守のような目に見えない仕事が多く、経営層からすると目に見えない割にコストがかかっているという悪い考え方をしている人も未だに一定層いるのが現実です。



どの程度の年収かは企業・業務内容により異なりますが、一般的には350~800万程度でしょう。

1000人規模の企業で情報システム部門の人数は10人程度、45～60歳くらいの部長で800万程度、新卒350万程度です。ほとんどの人は400~600万くらいに収まります。



　情報システム部門は人の異動も少なく、そもそもの配属社員数も少ないので、基本的には年功序列式の企業が多いです。個人の実力が目に見えてアピールできるような機会も少ないため、激的な給料の上昇は望みにくい環境です。





2.1.4 　メリット


● 幅広い業務に携われる

● 幅広い人と関われる

● 自社内で完結する仕事が多いので、客先などに外出することが少ない

● 構築は担当しないことが多いので、大きな責任を負うことは少ない

● 保守的な人が多いので、落ち着いている雰囲気（ITに比較的強いけど安定した仕事をしたい人が集まります）

● 残業は比較的少ない





2.1.5 　デメリット


● 技術やIT機器の深いところまで関わることが少ないので、技術力の向上はあまりできない。

● 自分では簡単にわかるような問い合わせや、メーカーに問い合わせないと絶対にわからないような問い合わせが頻繁に起きるので精神的によくない。

● 場合によっては深夜対応、トラブル対応を担当する。

● 給料が比較的少ない。

● 転職先が少ない。（給料が低く、情報技術も低く、顧客とのやりとり経験の少ない人は結局似たような職種でしか採用されません。）





2.2 SE（システムエンジニア）


　SEとは、システム開発を担当するエンジニアのことであり、ほとんどの場合は自社内ではなく顧客のシステムを開発するために提案から設計・構築、運用・保守などを担当するエンジニアの総称です。



実際のSEとは担当するフェーズ（提案、設計・構築、運用・保守の各工程）や、担当するIT分野（ネットワーク、セキュリティ、サーバー、クラウド、アプリケーション）などにより細分化されてそのどれかを担当するのが一般的です。





2.2.1 　主な業務内容


　SEは担当するフェーズ、分野によって業務内容が異なってしまいますが、経験を重ねることによって担当するフェーズが増えていくことはよくあります。

（例えば、ネットワーク運用・保守エンジニアで採用されて社内ネットワーク監視を担当していた人が、設計・構築を担当する部署に異動して、次には提案から関わるプロジェクトマネージャーとして案件に関わることもよくあります。）



SE全体での業務内容を紹介していきます。

● 提案フェーズ

営業とともに新規案件を獲得するために提案を行います。

顧客との間の契約方法には2種類存在します。「競争入札」と「随意契約」です。



「競争入札」の場合は顧客が、新しいシステム開発を行うための外注先を数多くの企業から競争させて、最も条件の良い企業を探す方法です。



主に国や公的機関、大企業などが数億円以上の規模のシステム開発案件が発生した場合に取る手法です。顧客の出す要件に最も合致した条件、費用、体制でシステム開発を行ってくれる企業を選定します。そのため新しい顧客であることも多く厳しい目で見てくるので難易度は高いです。



「随意契約」の場合は顧客と競争入札を行わずに、決めた相手に外注を行う契約方法です。



この契約方法の場合は、実際に付き合いのある企業に行う契約方法なのでシステム更改や、システムの一部追加を目的とした案件が多いのが特徴です。

規模も比較的小さめで数百万～1,2億円程度の規模が多いです。随意契約の場合は顧客からの信頼関係が結べている状態でプロジェクトがスタートするので比較的難易度は低めになります。



　この「競争入札」の場合は案件を獲得するまでの間に、提案書を作成したり費用見積もりを作成したり、顧客の裏で様々なIT機器ベンダー（ベンダーとは製造元企業のこと）とやりとりして提案書のための技術を詰めたりするのが主な業務です。

「随意契約」の場合はこの提案フェーズの業務はありません。



● 要件定義フェーズ

無事に顧客から案件を獲得した場合（競争・随意関係なく）、次はシステムを開発するために顧客の要件を整理して、実際にどのような方式で要件を実現するかを定義してあげる必要があります。

このフェーズのことを「要件定義」といいます。



提案の段階で顧客から要求されている要件について、詳細を詰めていくイメージです。随意契約の場合は要件をヒアリングしないといけないので基本は同じです。



具体例を上げましょう。

提案時の顧客からの要件はフワフワとして技術や機器について確定できるような言い方はしていません。

提案時の顧客からの要求（無線LAN部分の一部）

● 新しくできる部署に無線LANを導入する。

● 無線LANは最新の暗号化技術を採用すること。

● 最新の通信規格に対応していること。

● 5Ghz帯と2.4Ghz帯の両方の同時使用ができること。

● 無線アクセスポイント1台の障害時にもユーザーに通信断を起こさない機能を有していること。





この要件を顧客にヒアリングを実施して確定させていきます。

要件定義（確定させた要件を文書化する）

● 新しくできる部署に無線LANを導入する。

▶マシン室にXX社の無線コントローラー【型番YYY】、新しい部署の天井にXX社のアクセスポイント【型番ZZZ】を設置する。

● 無線LANは最新の暗号化技術を採用すること。

▶暗号化プロトコルCCMP、暗号アルゴリズムAESに対応したアクセスポイントを使用する。

● 最新の通信規格に対応していること。

▶IEEE802.11acに対応したアクセスポイントを使用する。

● 5Ghz帯と2.4Ghz帯の両方の同時使用ができること。

▶アクセスポイント【型番ZZZ】を使用することで対応可能。

● 無線アクセスポイント1台の障害時にもユーザーに通信断を起こさない機能を有していること。

▶アクセスポイント【型番ZZZ】のAAA機能を利用することで、障害時には周囲のアクセスポイントに接続させるためユーザーの通信断は起きない。



このような作業を顧客と繰り返して、文書化して要件に合致した機器・技術を導入することを顧客に見せていきます。これが要件定義です。





● 基本設計フェーズ

要件定義にて確定させた要件を実機や技術ベースの内容まで落とし込み、数十～数百ページの「基本設計書」と呼ばれる設計資料を作り込むフェーズです。



基本設計書には、案件情報からシステム構築目的、対象システムの構築範囲、システムの構築内容の概要、方針について記載していきます。



基本設計書の完成までには顧客とこまめなやり取りが必要になってくるので、顧客と定例会等を設けることが一般的です。



この基本設計フェーズにおいてどのような業務が発生するかの具体例を上げましょう。こんな資料を作るんだなぁくらいにとらえて、細かい意味までここで理解する必要はありません。参考程度にしてください。





表 2.2‑1　基本設計の業務例

成果物（設計資料）

資料内容



WBS(Work Breakdown Structure)

タスクを細分化した一覧表



マスタースケジュール

タスクとマイルストーンを意識したスケジュール



基本設計書

案件内容と各システムの概要、基本設計をまとめた設計書



ネットワーク構成図

システムの各機器の接続図



IPアドレス一覧表

システム内の各機器の利用するIPアドレスの一覧表



機器一覧表

納品予定の機器について、メーカー、型番、製品の内容、保守内容などをまとめた表



サイジング一覧表

導入する機器を確定させるにいたった根拠とともに、機器の処理能力や容量を一覧にする



テーブル定義表

データベースのテーブルを定義した一覧表



ER図(Entity Relationship)

データベースのデータ構造を定義した図



画面レイアウト図

WEB画面やアプリケーションのレイアウト図



画面遷移図

WEB画面やアプリケーションの画面遷移図



業務フロー図

顧客の変化する業務フローについて新しく定義する





● 詳細設計フェーズ

基本設計が固まったら、詳細設計書の作成に入ります。それがこのフェーズです。詳細設計とは、基本設計の概要や方針を基に、どのようなパラメータ、コードによって動くかを具体的に確定させることであり、基本設計書と同様に詳細設計書と設計資料の作成を実施します。



詳細設計書は、各機器・各アプリケーションごとに、ExcelやWordで数ページ程度の資料を作成します。



SIerであってもこの詳細設計資料を作成するのは非常に手間がかかることと、とても技術に踏み込んだ内容を記載するため外注することが多いです。



この詳細設計フェーズでは導入機器やアプリケーションの開発ベンダーとやりとりすることは多くなります。一方で、顧客とはやり取りが減ってくるのが特徴です。



極端な言い方ですが顧客は要件通りに動けばいいと考えている人も多く、パラメータやコードについて詳しくない人も多いので、このフェーズで細かいところまで突っ込まれることはあまりありません。

しかし、定期的な報告は他のフェーズと同様に必要です。





● 構築・テスト

　詳細設計フェーズにて、各機器・アプリケーションの仕様が確定したら次は実際に機器・アプリケーションの構築を行います。それがこのフェーズです。

顧客内のマシン室やデータセンターと呼ばれる大型のシステム機器専用施設に導入しにいきます。



構築やテストもSIerは外注することが多く、外注先に構築・テストを実施してもらいます。外注する場合は、最初にテスト方針やテスト内容を決めることと、テスト内容の結果の確認を担当とします。



そして構築内容がテストで正しく動くことが確認できたらテスト内容をまとめて、顧客に報告する役目を担っています。もちろん外注せずすべて自社内で実施する場合も存在します。



実際には下記のような機器に設定を入れ込んでいきます。ほんの一例です。

下記の機器はプログラミング言語ではなく、独自OSやWindows、Linuxと呼ばれるサーバー系のOSで動作します。プログラムとは違い、コマンドと呼ばれる動かしたい内容を１対１対応のように定義していく形式の言語を利用して構築します。コマンドはOSにより異なります。



インフラ系のシステム開発にはほぼ必須の機器でありSEが構築するものです。





Cisco社有線ネットワーク機器





Cisco社無線ネットワーク機器





HP社サーバー機器





IBM社ストレージ機器



図 2.2.1‑1　SE構築機器　具体例





● 運用・保守

　システムの開発が終わるとシステムの運用が始まります。SIerのほとんどは顧客に新システムを構築すると同時に運用・保守も受け持つことを提案します。

運用・保守は企業にとって儲けやすいからです。



ほとんどのシステムは、機器やユーザー端末の保守期限、Versionによるセキュリティが悪くなることなどを考慮して、5年くらいの間隔でシステムを更改していきます。



運用・保守は大きなトラブルが無い限り人件費もかかりませんし、今の時代はそもそもトラブルが起きないように設計するのが基本です。たとえトラブルが起きてもすぐに検知できる監視システムを導入しています。



そのため運用・保守は企業にとってとても儲かるフェーズです。実際には1年で構築して5年間の保守であっても、保守費用だけで構築期間中の人件費・機器費用の数倍程度を顧客からもらうことがあります。



しかし、夜間のシステム監視やトラブル対応が必須になってしまうので、提案や構築を担当した人とは別で、運用・保守専用のエンジニア部門が存在することがほとんどです。





2.2.2 　具体的な就職先


SEの主な就職先は、いくつかに分類されます。

● SIer企業

特徴：自社製品の機器を持っていることが多く、実機の導入が多い

企業例：日立系、富士通系、NTT系、NEC系、証券系（〇〇総合研究所と企業名でシンクタンクと呼ばれる企業だがSIerのような業務も多い）、商社系、外資系など様々です。



● Web系企業

特徴：自社のWebサービスを持っていて、実機ではなくWeb経由でのクラウドサービスや、実機に投入するパッケージ製品の導入が多い。設計・構築フェーズだけを受け持つことも多い。SEではなくPGとして活躍する人も多い企業である。

企業例：ヤフー、楽天、DeNA、LINE、GMO、サイバーエージェントなど。





2.2.3 　年収モデルケース


　SEの年収について説明する前に、IT業界には多重下請け構造があることを説明しなければいけません。



IT業界（特にSIer）では、多重下請けのピラミッド構造でシステム開発が行われています。それは、顧客から直接受注する元請けと呼ばれる企業の技術不足や人員不足から、外注したほうが安く上がり、品質も向上するからです。

二次請けの企業も同様の理由から外注することもよくあり、このような外注の繰り返しが続きピラミッド構造での体制が組まれてしまいます。



日本ではよく起きていることですが悪いことも多く、社員が育たなかったり、丸投げ体質のせいでうまく管理ができなくて問題が大きくなるまで気付けなくなってしまっていたりと、いろいろな問題のタネを抱えることになってしまいます。



しかし、長年続いてきたこの構造を変えることは難しく数年単位では変わらないでしょう。





図 2.2.3‑1　IT業界のピラミッド構造





ここでなぜこの業界構造を説明したかというと、このピラミッド構造のどこの企業に属するかによって年収も身につくものも大きく異なるからです。



具体的に年収のモデルケースについて紹介していきます。





● 元請け（一次請け）

元請けになれるような企業は、大手系列の親企業やそれに準ずる大手子企業、外資系企業がほとんどで、誰しもが聞いたことがある企業がほとんどです。それ以外の企業では高くても数千万円規模の案件であればかろうじて元請けにはなれることがあります。



表 2.2‑2　元請けの年収モデルケース

年齢

年収



大卒25歳前後

400~600万



30歳前後

500~700万



40歳前後（役職なし）

600~800万



40~60（役職付き）

800~1200万





● 二次請け

二次請け企業は、大手系列の子企業（大手の子企業は大手の親企業が取ってきた案件の開発担当を担う場合が多いですが、系列外企業とパートナー契約という（俗に言うと下請け契約）を結んでいる場合もよくあります。独立系IT企業も多いです。



数億以上の大規模案件であると、二次請けであっても名だたる大手企業が二次請けとして受注することもあります。



そこから更に外注するので十分に採算がとれるためです。年収としては元請け企業と比べると若干落ちてきますが、あまり目立って落ちてきません。



表 2.2‑3　二次請けの年収モデルケース

年齢

年収



大卒25歳前後

400~550万



30歳前後

500~600万



40歳前後（役職なし）

600~700万



40~60（役職付き）

700~1000万





● 三次請け以降

三次請け企業は、大手系列の孫企業や、独立系企業、ベンチャー系企業などあまり知名度のない企業が多いです。

三次請け以降になってくると担当する仕事の範囲もテスト工程のような単純作業も多く、顧客と接する機会もなく、社外の人に対して説明資料を作成したり、頭を使った仕事をしたりするような機会が減ってきます。



その分給料も低くなり、経験できる範囲も狭くなるのでキャリアパスが狭くなってしまうので注意が必要です。



表 2.2‑4　3次請け以降の年収モデルケース

年齢

年収



大卒25歳前後

300~400万



30歳前後

400~450万



40歳前後（役職なし）

450~600万



40~60（役職付き）

600~800万





SEは顧客に人件費を見積もるときに人月単価という「この人が一ヶ月担当したらいくら請求しますよ」という単価を基に費用を見積もることがよくあります。



実際に筆者が見てきた例ですが、

元請けは大学新卒2~3年程度でも、単価月150万

四次請けは40歳のベテラン社員でも、単価月80万

というくらいの差はよくあることでした。



単価がそのままその人の給料になるわけではなく、企業に半分以上も引かれてしまって手元に給料として振り込まれるのが当然ですが、大元の単価が違えば社員に払える給料が違うのは当然の話ですよね。



同じ仕事をしていようが、案件にたくさん貢献していようが、所属している企業次第でもらえる給料が決まってしまうのが恐ろしい構造です。





2.2.4 　メリット


● IT業界自体が伸び続けており、人材が不足しがちな業界なので転職にはあまり困らない。

転職先としては、SIer、Web系、社内SE、コンサルティング、システム監査

など幅広い。

● マネージメント経験から、テクニカル経験、顧客に新製品・技術を売り込むセールス経験など幅広く経験できる。

● 技術の深いところまで関われることができるため、スキルアップがしやすい

● 数多くの人と関わり、交渉・かけひきの経験が詰める

● 仕事のIT知識がたまに実生活に役に立つ。





2.2.5 　デメリット


● ピラミッド構造の上位企業に入れないと給料もスキルも上昇が見込めない。

● 大手企業の場合、仕事が細分化されすぎてしまっているので仕事の幅が広がらないうえに、同じような仕事が続いてしまう。

● システム開発は、システムを停止して作業しなければいけないときがあるので深夜作業や休日作業がそこそこ発生する。（システムリリース前になると月に1,2度くらいだが、提案や基本設計段階ではほとんどない。）





2.3 PG（プログラマー）


　PGとは、SEの基本設計を基に実際のWebサービスや、アプリケーションのプログラミング（コーディング）を行う人たちの総称です。

アプリケーションエンジニアと呼ばれることもあります。



エンジニアとは違い、目には見えないサービスの中身を作りこむことが業務です。「図 2.2.1 1　SE構築機器　具体例」で示したような機器はプログラミング言語ではなくSEが構築する機器ですが、そのうちのサーバーと呼ばれる機器に導入するパッケージ製品の開発をプログラマーが担うことがよくあります。



イメージしやすいものでいうと、ウイルスバスターのようなセキュリティソフトをPCにインストールしますよね。



インストールするだけで機能が簡単に使えるようになるのはPGが中身を作り込んでくれているからです。PCに限らずサーバーなどのインフラ機器においてPGの開発した製品やコードは導入されているものです。

プログラマーは見えない部分の開発を中心に担当しているということですね。





2.3.1 　主な業務内容


　PGの業務内容はプログラミング言語を用いた開発と、開発した製品のテストがほとんどです。

プログラミング言語は世界で200以上あると言われていますが、主流なのは20程度です。具体的によく使われている言語は下記のようになっています。

● Web開発系

PHP、Ruby、Python、Java、C#、HTML、CSS3、JavaScript



● ゲーム開発系

C++、C#、JavaScript、Swift、Ruby、Lua



● アプリ、パッケージ開発系

Java、JavaScript、C#、Objective-C、Swift、Visual Basic



業務内容によって扱う言語が異なってくるのが特徴です。そんなにプログラミングなんて覚えられないと思うかもしれませんが、プログラミングにはどの言語でも似たようなルールがあったり、大元が同じ言語でそこからの派生言語だったりするので慣れてしまえば多くの言語が扱えるようになります。





2.3.2 　具体的な就職先


　プログラミングは用途によって、扱う言語が違うように就職先も大きく分類されます。

● Web系企業

特徴：自社のWebサービスを持っていて、実機ではなくWeb経由でのクラウドサービスや、実機に投入するパッケージ製品の導入が多い。設計・構築フェーズだけを受け持つことも多い。

企業例：ヤフー、楽天、DeNA、LINE、GMO、サイバーエージェントなど。



● ゲーム系企業

特徴：その名の通り自社のゲーム製品を持っているか、委託されてゲーム開発している企業です。

企業例：カプコン、Cygames、スクエア・エニックスなど。



● アプリ、パッケージ系企業

特徴：ウイルスセキュリティソフトやExcelのようなインストールしたら使

えるようなパッケージ製品を持っている企業や、FacebookやTwitterのようなスマートフォンにダウンロードするだけで使えるようになるアプリケーションを持っている企業です。

企業例：セキュリティソフト開発企業、アプリ開発企業など多数。





2.3.3 　年収モデルケース


　PGの年収・キャリアはSIerのような多重構造を取ることはあまりないため、企業による差は大きくありません。



その代わり上昇幅も少なく、設計・開発工程がメインであることや、案件の指揮・管理を別の企業が行うこともあるので、PGが顧客から直接費用をもらえることは多くありません。その分SEよりも低めになってしまう傾向があります。



表 2.3‑1　PGの年収モデルケース

年齢

年収



大卒25歳前後

300~450万



30歳前後

400~550万



40歳前後（役職なし）

500~700万



40~60（役職付き）

700~900万





2.3.4 　メリット


● 開発の深いところまで関われるのでスキルアップがしやすい。

● 開発以外の工程にはあまり関わらないので、好きな作業に専念しやすい。

● 最新の言語・技術を使って製品開発ができる。

● 客先との接触も多くはないので、外出は少なく自社での開発も多い。

● SEのような夜間作業や休日作業は比較的少ない。（システムリリース前の余裕がない時期は別）





2.3.5 　デメリット


● 開発以外の工程にはあまり関わらないので、スキルの幅は広がりにくい。

● プログラミング言語は数年で新しい言語が出てくるので、常に新しい言語への勉強と慣れが要求される。

● 日本では評価されにくい職種なので給料が上がりにくい。逆に海外では優秀なPGには数千万円単位でのオファーが多くPGが活躍しやすい環境。

● チームプレイが多い職種ではないのでコミュニケーション能力が伸びづらい。苦手な人も比較的多い。





第3章

　プロジェクトの流れ





3 プロジェクトの流れ


システム開発における案件発生から案件終了までの流れを説明していきます。





3.1 プロジェクト発足の流れ


　競争入札の場合は、具体的には下記のようになっています。随意契約の場合はいきなり要件定義に入ります。





図 2.3.5‑1　プロジェクト発足の流れ（競争入札）





3.2 新規案件の獲得


　まずは新システムの開発を考えている顧客を見つける必要があります。新規案件を探す方法は主に、営業が中心となって

● 既存顧客に困っていることがないかヒアリングし、システム導入を提案する。

● 既存顧客が新しい案件を持ちかけてくる。

● 新規顧客へ営業をかける。

のパターンに別れます。



どちらにせよ、営業だけでは技術的な説明が不足してしまうので、この段階でもSEを同行させることはよくあります。



同行させるSEはベテランで技術に強く、顧客への説明が上手な人が選ばれます。このような技術営業職をSEとは別に設けている企業も多く存在します。SEと営業の中間職のようなイメージです。



そうして新しいシステム開発を検討している顧客が見つかれば、社内でもプロジェクト発足です。随意契約であればすぐにでも要件定義に入れますが、競争入札となってしまった場合は、細かい段階を踏んで競合他社に勝つ提案をかけていかなければいけません。





3.3 RFIによる業務要件整理


　RFIとはRequest For Informationのことであり、簡単に説明するとシステム開発企業に新規システムに関する情報提供の依頼をするために、新規システムの要件をまとめた資料です。



発注元から入札先の複数のベンダーに新システムに対する簡単な業務要件や機器の要望をまとめたRFIを送付し、それぞれの企業からの「ウチの企業ならこんな機器を使って、こんな感じであなたの企業のシステムを開発できますよ」という簡単な提案書を提出してもらいます。



その提案書は細かい内容や、細かい価格までは決めないものの、おおよその概要や概算費用を提出してもらいます。

導入製品カタログ内容の紹介や、自社内の似た事例の紹介も行い、自分たちの企業がどれだけ構築できるかをアピールします。



そうすることで、発注元（ユーザー）はどの企業が、どのような機器・仕様で要件を実現するのかを検討します。



この段階では発注元が比較や検討のために情報をもらうだけなので、システム開発ベンダーは確定させません。





SEは顧客から公示されたRFIに対する提案書の作成や、製品を取り扱うメーカーに問い合わせ対応やカタログの収集、概算見積もりの作成などを担当します。





3.4 RFCによる調達仕様整理


　RFCとは、Request For Commentのことであり、簡単に説明するとシステム開発企業に新規システムに関する意見を依頼するために、新規システムの調達仕様をまとめた資料です。



RFCは場合によっては省略されたりRFPの後に行ったりすることがあるので必ず実施されるわけではありません。



　発注元は、複数のシステム開発ベンダーからもらったRFIの回答（提案書）をもとに、新規システムの調達仕様をまとめます。



具体的には、新規システムについて

● 調達方式、単位

● 調達機器の条件指定

● 成果物の指定

● 入札要件、遵守事項

● 再委託事項

● 契約書記載事項

など、RFIのときには記載していなかったような具体的な細かい調達のための仕様をまとめます。



そうしてまとめた調達仕様をRFCとして公示し、システム開発ベンダーから、調達仕様を中心として意見をもらうことが目的です。



RFCの公示を受けたシステム開発ベンダー側は「ウチの企業なら具体的にこんな機器をこんな台数使って、こんな条件で調達しますよ。その時こんな契約もしますよ。」という意見をまとめて発注元に提出します。



SEはこのRFCに対する意見書の作成のために、機器を取り扱うベンダーと問い合わせ対応を行ったり、技術仕様について詳細に詰めていったりします。



その意見書も受領した発注元は再度、複数のシステム開発ベンダーの調達方式や条件について比較を行い、どのベンダーが一番要望に近いか検討することや、自分たちが新システムで実現したい要件を固めます。





3.5 RFPによるベンダー整理


RFPとは、Request For Proposalのことであり、簡単に説明すると新規システムを開発するベンダーを確定させるために、新規システムの構築内容、理解度を測るための提案書を依頼するための資料です。



RFCにより新システムで実現したいことや、業務要件などを固めた発注元は、より詳細に新システムの構築に関する要件をまとめます。



具体的には、新規システムについて

● RFCで確定させた調達方式、条件

● RFIではあいまいになっていた、業務要件を詳細化、明確化

● システム開発の期限

● システム開発プロジェクトの体制、プロジェクト運営・推進方法

● プロジェクトマネージャーの条件

などを詳細に依頼書としてまとめます。それをRFPとして、システム開発ベンダーに提出します。



各ベンダーはRFPをもとに新システムについて「ウチの企業なら具体的にこんな機器をこんな台数使って、こんな構成とこんな技術を使って要件を実現しますよ。こんなスケジュールや体制で取り組みます。」と一つの提案書にまとめます。



そして、RFIのときよりもより詳細な見積もり費用を提出します。



その新システムに関する提案書を受領した発注元は、各ベンダーから提案書について評価を行い点数付けしていき、ベンダーの選定を行います。



提案書の選定の評価基準は主に、

● 技術内容の質

● 加点項目、減点項目による点数増減。（主に、顧客も決めかねている部分をどのような方式で実現できるかを提案できれば加点、最低限の要件が満たされていなければ減点）

● 足切り点を超えていること

● 他社における構築実績

● 提示価格

などを中心に点数付けします。



そうして最も点数の高いシステム開発ベンダーと契約を結び、これで提案フェーズの終了で、以降は要件定義フェーズになります。



ちなみに当然の話ですが、入札により案件を勝ち取るまでは契約ができていないので、顧客からお金をもらわずに稼働しています。案件を勝ち取れなければ企業にしてみれば人件費の損失でしかありません。負ければ社内でのプロジェクト体制も解除で、別の案件を担当することになります。





3.6 入札確定以降


　入札により無事案件を勝ち取り契約を行ったら、次からは実際の技術・機能を固めていくフェーズに入ります。

詳しくは「2.2.2. SEの主な業務内容」で紹介したので、ここではサラッとおさらい程度にしておきます。





3.6.1 　要件定義


　要件定義書の完成のために、提案時の曖昧な箇所を明確にするフェーズです。

顧客がシステムで実現したい要件を、「どのような機器で、どのような機能・技術を利用して実現するか」を定義し、顧客と合意形成を図ることが目的です。





3.6.2 　基本設計


　基本設計書の完成のために、要件定義で確定した「どのような機器で、どのような機能・技術を利用して実現するか」を更に追求し、「どのような機器（型番・台数・構成）で、どのような機能・技術（設計方針、概要や大まかな数値、機能の使用有無の選別）を利用して実現するか」を定義し、顧客の要望を叶える設計をすることを見せつけることが目的です。





3.6.3 　詳細設計


　詳細設計書の完成のために、基本設計で確定した「どのような機器（型番・台数・構成）で、どのような機能・技術（設計方針、概要や大まかな数値、機能の使用有無の選別）を利用して実現するか」を更に追求し、「各機器で、どの機能・技術をどのような数値、設定を利用して構築するか」を定義し、導入機器を机上の設計まで完成させることが目的です。





3.6.4 　構築


　システム構築のために、詳細設計で確定した「各機器で、どの機能・技術をどのような数値、設定を利用して構築するか」を記載した詳細設計書を利用して、実際の現場に機器を搬入し、設定を入れ込みます。機器同士のケーブル結線も行います。

顧客の要望したシステムの基盤構築を完了させることが目的です。





3.6.5 　テスト


　システム構築完了のために実際に構築した機器が想定通りに動くことをテストします。





下記のようなステップを経てテスト全てを完了とします。

● 試験計画書の作成

顧客にどのようなテストをどのようなスケジュールで行うのか説明します。



システム開発においては、テストではどのような項目・シナリオでテストを行うかをフェーズと対応させて考えるV字モデルという考え方があります。





図 3.6.5‑1　システム開発のV字モデル



具体的な見方としては、

提案時の顧客の要求を分析した内容を、受入試験にて確認します。

要件定義にて定義した内容を、総合試験にて確認します。



という具合に、図左側のこれまでのフェーズで考慮した内容を、図右側の試験工程で確認するように対応します。



　それでは各試験内容について説明していきます。





● 単体試験

機器単体での単純な動作確認を行います。「電源が正常に稼働していること」、「コマンドを投入したら正常にシャットダウンされること」などのように、単純なテストです。

他の機器と接続せず、一つの機器単体で行う機能に限ったことなので単体試験と呼びます。



● 結合試験

機器同士をケーブル接続させて動作確認を行います。「正常に機器間でのアクセスができること」、「障害発生時に想定の機器へ切り替わること」のように、2つ以上の機器を結合した状態で利用しないと確認できない機能の確認を行うため、結合試験と呼びます。



● 総合試験

実際のシステム環境において、想定通りのシナリオで動作できる確認を行います。

結合試験までは顧客環境ではなく、どこで実施しても問題はありませんが、総合試験では必ず本番で稼働するシステムと同じ環境で動作ができることを確認します。



確認内容も、正常時の動作、障害時の動作、複数機器をまたいだ機能確認やアクセス確認、など様々なパターンの試験を行います。総合的な判断を行う場であるため総合試験と呼ばれます。



● 受入試験

構築できたシステムをユーザーが確認する試験です。要件が緩い顧客では実施しないこともありますが、厳しい顧客の場合は試験ログから試験結果一覧表の数値まで細かくチェックが入ります。



ここで顧客の出した要件・要望がきちんとシステムに反映されていることを顧客が確認し、問題がないことを顧客が了承したらテストフェーズ終了となります。





3.6.6 　運用・保守


　テストが完了すればシステムの稼働が始まります。システム稼働が実際に始まることを運用と呼び、運用期間中になにか問題があれば対応することを保守といいます。運用保守と一緒に扱われます。



システム開発企業の多くでは、システム稼働までの構築とシステム運用・保守の担当を分けていることが多いため、実際にはリリース前に運用保守への引き継ぎが行われます。



顧客は運用期間中になにか問題があれば構築を担当した人ではなく、保守窓口に連絡をとることになります。保守の形態は契約内容に紐づくので24時間365日対応ということもあれば、平日9:00~18:00まででの対応という場合もあります。どのような対応とするかは契約時に決めることです。





第4章

　プロジェクトの体制





4 プロジェクトの体制


SEは案件（＝プロジェクト）としてチーム単位で動いていきます。それでは実際にどのような体制を組んで、それぞれがどのような役割を担うのかを解説していきます。エンジニアの人は、どのようなポジションにつくかで仕事内容は大きく変わってきます。





4.1 よくあるプロジェクト体制


　一般的なシステム開発において、よくあるプロジェクト体制を例にあげます。

案件例はPGがいないようなシステム基盤の構築プロジェクトです。





図 3.6.6‑1　システム開発におけるプロジェクト体制



マネージメント系と技術系に大きく別れ、その中でも細分化されて担当することになります。



案件規模が大きくなるほど人数と業務が増えるので細分化して担当しますが、人数が少ない案件であれば、あまり役割分担をハッキリさせないでプロジェクトが進む場合もあります。



それでは、それぞれがどのような役割を担っているのかを説明しいきます。





4.2 マネージメント系


4.2.1 　PM（プロジェクトマネージャー）


　ここは説明するまでもないかもしれませんが、プロジェクトのリーダーです。

主な仕事内容は

● プロジェクト計画

● 顧客とのコミュニケーション（窓口）担当

● 人員、コスト管理

● スケジュール調整

● 大まかなタスク管理

● 営業と協力して企業間での契約関連

● 打ち合わせ全般の主導



求められる人物像は

● 案件の関連技術への幅広い経験があること

● コミュニケーション能力が高いこと

● リーダーシップが高いこと。

● 元請け企業の社員であること。

業務委託や協力企業の社員だとどんなに優秀でもPMにはなれません。



よくPMが使用する管理ツールとして、ガントチャートとよばれる工程管理ツールがあります。どのプロジェクトでも必ず利用されているツールです。ガントチャートの例を紹介します。





図 4.2.1‑1 ガントチャート

(引用：IPA 情報処理推進機構https://www.ipa.go.jp/files/000004030.pdf)





4.2.2 　PMO（プロジェクトマネージメントオフィス）


　PMを補佐する役目として設置されます。PMOは小規模案件だとポジションが用意されることはありませんが、大規模案件になるとPMは顧客対応だけで時間がとられ、自社内や別企業との調整に時間を割けなくなってしまうため、PMOというポジションが用意されます。



PL（プロジェクトリーダー）として設置されることもありますが、基本は同じと思ってくれて構いません、PMと同じくプロジェクト全体を管理することを主なタスクとしています。



主な仕事内容は

● PMの補佐。動けていないPMのタスクを引き取る。

● 協力企業とのコミュニケーション（窓口）担当

● 人員管理。

PMとの違いはプロジェクトが推進できるように配慮した動きをすること。わかりやすく言えば滞っている部分のケツを叩くこと。

● スケジュール調整・管理

● 詳細なタスク管理

● 打ち合わせ全般の題目作り、議事録作り

● プロジェクトメンバーが作成した資料レビュー

と、多岐に渡ります。



求められる人物像は

● コミュニケーション能力が高いこと

● リーダーシップが高いこと。

● マネージメント能力が高いこと。

PMよりも詳細にメンバーの管理を行うため、PMよりもマネージメント能力が高い人に向いています。むしろ、PMのマネージメント能力が低いからPMOが設置されることがよくあります。

協力企業の優秀なベテランSEや、ITコンサルタント企業からの派遣、元請け企業の若手社員などがよく配置されます。





4.3 技術系


4.3.1 　ネットワークエンジニア


　有線ネットワーク、無線ネットワークを専門としたインフラエンジニアの中でも人口の少ないエンジニアです。人口は少ないものの、システム構築においては必ずネットワーク機器を利用しなければシステムは成り立たないので必須なポジションとなります。



主な仕事内容は

● ネットワークスイッチ、ルーター、無線コントローラー、無線アクセスポイントの設計・構築担当

● ネットワーク機器を利用して、どのような通信をどのようにシステムに振り分けるのか（ルーティングと呼ぶ）を中心に設計

● 設計書の作成（システム構成図、IP一覧表、通信フロー図など）



求められる人物像は

● ユーザーへの配慮ができること。

目に見えない部分なのでユーザーが把握していない技術を多用します。ユーザーが理解していない部分を汲み取り、設計に落とし込む必要があります。

● 緻密な設計に耐えられること。

ネットワークが動かなければどんなシステムも動きません。ネットワーク機器は一番影響度が高く細かい設計をするので、他の職種よりも緻密な設計になります。



ネットワークエンジニアが必ず作る設計資料として、ネットワーク構成図の例を紹介します。これくらいの構成であれば中小規模であり、０からの構築でも数百万程度でしょう。実際にはこの10～20倍程度がよくある規模です。





図 4.3.1‑1　ネットワーク構成図

(引用：IPA情報処理推進機構https://www.ipa.go.jp/sec/softwareengineering/tool/ep/ep1.html)





4.3.2 　サーバーエンジニア


　サーバー、ミドルウェアなどの専門に扱う、エンジニアの中でも人口の多い職種です。ネットワーク上に乗るシステムのコンテンツを作るための技術ととらえてくれればいいでしょう。WindowsやLinusといったOSを中心に取り扱います。



主な仕事内容は

● サーバーの設計・構築担当

● サーバー機器上に仮想サーバーを構築して（物理機器的には一つの機器だが、物理サーバーの中に複数の仮想的なサーバーを作り分割するようなイメージ）、各サーバーにOSを導入して、コマンドやスクリプトを利用してシステムのコンテンツを作り上げる。

● Webサーバー、メールサーバー、認証サーバーなどユーザーが利用する中身を作り上げる。

● 設計書の作成（ハードウェア構成図、サイジング一覧表、システム内機能一覧表など）



求められる人物像は

● 幅広い知識・技術があること。

サーバーはただの箱物であり、その中身を作るのが本質です。中身はシステムによりほとんど異なり、導入するOSやソフトウェア、ライセンスも様々です。





サーバーは数多くの種類を導入するので、一覧表や構成図としてまとめておくことが一般的です。ハードウェア構成図の例を紹介します。





図 4.3.2‑1　ハードウェア構成図

(引用：IPA情報処理推進機構https://www.ipa.go.jp/sec/softwareengineering/tool/ep/ep1.html)





4.3.3 　データベースエンジニア


　データベースを専門とするエンジニアです。その名の通りデータベースとは情報の蓄積・検索・更新を有効に扱うために、データを論理的に整理するために利用します。



主な仕事内容は

● OracleやMySQL、PostgreSQL、Microsoft SQL Serverなどのデータベースシステムを利用した設計・構築担当

● データのバックアップや運用を考えた、データ設計

● 設計書の作成（テーブル一覧表、テーブル設計書、ER図、CRUD図など）



求められる人物像は

● 論理的な思考ができること。

データの整合性をとるための論理的な設計が多いです。

● 技術を極められること。

使用する製品はOracleを中心としてほとんど変わりません。その分深いところまで突き詰めた理解が必要なります。



データベース設計では、ER（Entity Relationship Diagram）図と呼ばれるデータ構造を俯瞰的に設計するための資料を作成して、データベースの構造を設計します。ER図の例を紹介します。





図 4.3.3‑1　ER図

(引用：IPA情報処理推進機構https://www.ipa.go.jp/files/000004422.pdf)





4.3.4 　クラウドエンジニア


　クラウドサービスを利用したシステム開発を専門とするエンジニアです。といってもピンとこないかもしれないので、前提知識を一緒に紹介します。



システムの構築種類には主に2種類あります。

「オンプレミス」

自社や、顧客内の施設などに実機を導入して、その実機に必要な設定を入れ込んでシステムを作り上げる構築方法です。セキュリティが確保しやすく自由に運用できますが、機器を購入するので高価で構築に時間がかかります。



「クラウド」

自社や、顧客内の施設への実機ではなく、どこかの企業がインターネット経由で

システム開発ができるサービスを利用する構築方法です。セキュリティや運用方法はサービスに依存しますが、機器を購入しないので安価で小規模から構築ができて時間がかかりません。



主に使用されているクラウドサービスは、

● AmazonのAWS（Amazon Web Service）

● GoogleのGCP（Google Cloud Platform）

● MicrosoftのAzure

の3社のクラウドサービスが世界的にも有名で、実績が豊富です。



インターネット経由で、独自のWeb画面からネットワーク機器や、サーバー機器などの配置が行えて、実際のシステムが構築できるとても便利なサービスであり、ここ10年程で一気に技術も導入実績も加速しています。



クラウドといっても使用者側に見えていないだけで、実際にはオンプレミスと同じ機器が裏では動いていて、システム構築のために中身を使いやすい独自の形で貸し出しをしています。



このクラウドサービスを利用したシステム開発を専門に扱うひとをクラウドエンジニアと呼びます。ネットワークやデータベースのように特定の技術に精通というよりかは特定のサービスに精通している人です。



近年ではこのクラウドサービスを利用して、システム全般をクラウドで利用する企業や、システムの一部分だけクラウドサービスを利用する企業が増えてきているので、エンジニア業界としても需要が高くなっている職種です。



実際にはネットワークやサーバーを専門としていた人が、派生してクラウドに手を出していくエンジニアが多いですね。





クラウドエンジニアについての説明に戻ります。

主な仕事内容としては、

● AWS、GCP、Azureなどのクラウドサービスを利用した設計・構築担当

● クラウドサービス独自の機能や、料金形態を考慮した設計

● 設計書の作成（機能一覧表、クラウド構成図など）



求められる人物像は

● 勉強熱心であること。

クラウドサービスは各社独自のサービスであるため、進化のペースが早く日々新しい技術やサービスが出てきます。

● メリット・デメリットを正確に把握できること。

オンプレミスとは違う部分を理解した上で、利用する技術のメリット・デメリットを把握しなければどのサービスを利用して構築すればいいのか理解できません。

● 最低限のIT知識があること。

インターネット経由でWeb画面から構築できるとはいえ、機器の立ち上げからIPアドレスの設定など一つ一つ細かい設定をしなければ動きません。



クラウドでは独自のサービスを組み合わせてシステムを構築するので、システム全体のネットワーク構成図のようなものを必ず作成して、システムの全体像を把握するために利用します。AWSのクラウド構成図の例を紹介します。



図 4.3.4‑1　クラウド構成図

(引用：AWS https://aws.amazon.com/jp/cdp/midscale-webservice/)





4.3.5 　セキュリティエンジニア


　情報セキュリティの向上やサイバー攻撃対策専門のエンジニアです。（プロジェクト体制図の例では出していませんが、よくいる職種です。）セキュリティといってもシステム開発において、セキュリティは大きく2種類に別れます。



「ネットワークワークセキュリティ」

　ネットワーク上を流れる悪意のある通信や、不正行為を防ぐためのセキュリティです。実際にはネットワークエンジニアとあまり区別はなく、ネットワークを専門としている人であればほとんどの人がネットワークセキュリティ製品の設計・構築も担当します。



主な仕事内容は

● ファイアウォール、IPS（不正防御侵入システム）、サンドボックス（未知の不正コード検知）、WAF（Webアプリケーションへの攻撃対策）などのネットワークに特化したセキュリティ製品を利用した設計・構築担当

● 顧客の安全性と運用のしやすさを考慮した設計

● 設計書の作成（ポリシー一覧表、通信フロー図、プロファイル一覧など）



ネットワークセキュリティではファイアウォールのポリシーと呼ばれる、送信元、送信先、IPアドレス、プロトコルなどを組み合わせて通信の許可/拒否を決めるルールを決める業務がよく発生します。

セキュリティルールの厳しい企業であればこのポリシー内のルールを数千～数万行作成してアクセス制御を行うこともあります。



実際のPalo Alto Networks社のファイアウォールの設計画面の一例を紹介します。



図 4.3.5‑1　ポリシー設計画面図

(引用：Palo Alto Networks https://www.paloaltonetworks.jp/features/policy-control)





「エンドポイントセキュリティ」

　PCやサーバーのような端末側に特化したセキュリティです。エンドポイントとは言葉の通りシステムの末端を意味します。末端ということはそこからさらに機器がつながることはなく、ユーザーが直接触るような端末のことです。



この考え方からすると、ネットワーク機器はサーバー機器やPC端末をシステムにつなぐ役割を持っているので末端（エンドポイント）ではありませんよね。

そのようにイメージしてもらえれば区分けがわかりやすいと思います。



セキュリティの世界では、何重にも防御を敷く多層防御の考え方が一般的です。

ネットワークセキュリティ対策をしていたとしても防ぎきれない攻撃は存在するので、ユーザー端末のような末端でも防御する仕組みを敷いておきます。



主な仕事内容は

● 端末やサーバーに導入するセキュリティソフトウェア、セキュリティソフト配布・管理用サーバーなどのセキュリティソフトウェアに特化した製品を利用した設計・構築担当

（ちなみにネットワーク製品は自分自身がセキュリティ対策を行う製品なので、セキュリティソフトは導入できません。サーバー機器は箱物なのでいろいろなソフトウェアやパッケージが簡単に導入できます）

● 顧客の安全性と運用のしやすさを考慮した設計

● 設計書の作成（ポリシー一覧表、機能一覧表、ソフトウェア適用手順書など）

Symantec社やMcAfee社、ESET社のウイルス対策ソフトウェアが有名ですね。



ネットワークセキュリティとエンドポイントセキュリティどちらも似たような観点から仕事をこなしていくので、求められる人物像もほとんど同じです。



求められる人物像は

● 勉強熱心であること。

セキュリティ攻撃者の技術進歩が早く、その攻撃を防ぐための新しい技術や仕組みが日々開発されています。4,5年前に導入したものも参考にならないくらいセキュリティ対策方法は目まぐるしく変わります。



● 安全性と運用性を正しく天秤にかけられる感覚をもっていること。

セキュリティは多層防御であるため向上させることは簡単ですが、向上させるにつれて導入価格も、運用の煩雑さも増していきます。

顧客は目に見えない部分への同じような機能の導入は嫌がりますが、構築したシステムが原因でサイバー攻撃を受けると顧客の信用を失うあげく、構築企業へ損害賠償請求を行われた事例まであります。



ただ単に構築すればいいというわけではなく、運用後も安全に稼働することが求められます。





これだけ言うとデメリットのほうがでかすぎるように聞こえるかもしれませんが、セキュリティ分野は世界的にも需要が急増しています。



しかし、需要に追いつくだけのセキュリティエンジニアが日本国内では育っていないのでセキュリティ分野を極めれば、仕事先に困ることはないでしょう。給料もITの中では高めの分野です。





4.4 どのポジションにつけるのか


　プロジェクトにおいてどのポジションにつけるのかによって、担当する業務内容が大きく変わることが理解できたのではないでしょうか。



そこで更に、それぞれのポジションにつくための条件・目安を解説していきます。





4.4.1 　PMのなり方


基本的には下記の通りです。

● 元請け企業の社員、まれにITコンサルティング企業の社員へ委託

● 案件規模数百万～1,2千万の中小規模案件、20代,30代PMで若手育成枠

● 案件規模数千万～数億以上の大規模案件、40代以降のベテランPM

● 社内外でのある程度のPM経験





4.4.2 　PMOのなり方


PMも準じますが、PMOとしては2パターンあります。「元請け企業の若手社員の育成」と「優秀なPMOによる実質のPM」がほとんどのパターンでしょう。





「元請けの企業の若手社員の育成」

● 元請け企業の若手社員社員であること。

条件らしい条件はこれくらいですね。PMの補佐兼育成のためのポジションです。



一方で、PMがマネージメントできるスキルがない、時間がなくてマネージメント業務ができないというときに用意されるPMOもいます。



「優秀なPMOによる実質のPM」

● 元請け以外の企業社員であること（協力企業やグループ企業）

● 社内外でのある程度のPM経験

● メンバーになめられない程度の知識とコミュニケーション能力

ここで「メンバーになめられない程度の知識とコミュニケーション能力」をあえて上げましたが、実際に現場でよく起きるのです。



PM以外の人が仕切ると現場のメンバーからは不満が出てきて、

「PMじゃないやつが偉そうにするな」

「部外者のくせに生意気なことを言うな」

「今までのやり方を変えて面倒な仕組みを作るな」

などなど、PMO（PL含む）はどの現場でも悪者にされてしまうのはよくあることです。



それもPMOポジションにつく人は元請け企業以外の人がヘルプでつくことが多く、しかも他の別企業の人と比べても賃金が高いことが多いからということも理由の一つです。



マネージメントのできない名ばかりPMのプロジェクトは多く、PMOは大規模案件でほぼ必須な重要ポジションであることは間違いありません。





4.4.3 　技術系エンジニアのなり方


　マネージメント系と違って幅広く、一つの案件で複数人いても問題のないポジションです。ほとんどの人は配属された部署の気色にあわせたエンジニアの道を進んでいると思います。



特にコレと言った条件はありませんが、元請けや協力企業関係なくこのポジションについている人は多いです。



PMやPMOだってポジションではマネージメント系ですが、もともとは技術系出身の人であり、純粋にマネージメント系しか経験しかしていない人は少ないです。

PMをやるにしてもある程度のシステム開発の経験や知識がなければ会話できませんからね。



　ポジションのなりやすさはあるものの、どの役割を担おうがポジションに対する貴賤や上下関係というものはほとんどありません。たまにつけあがっているPMはいますが、そのような人はいずれプロジェクトから降ろされます。能力不足や能力過信により途中で降ろされるPMの人は本当によくいます。

結局は自分の好きな分野を目指していろいろチャレンジすることが、一番自分のキャリア形成になるでしょう。





第5章

　SEの資格





5 SEの資格


IT系の資格は数多く存在し、国家資格からベンダー資格のマイナーなものまで幅広い分野で存在しています。

そこで初心者から若手エンジニアにおすすめの資格を紹介します。





5.1 資格の種類


5.1.1 　国家資格


広く浅く知識を問う問題が多く、特定の製品内容を問うような問題はありません。そのため業務に直結することはあまりありません。

受験料が数千円～１万程度で収まる試験が大半であり比較的安価です。

受験時期が決められており、１年に１，２回程度しか開催されていないことが多いです。

資格自体に有効期限はなく、更新の必要がないものが大半です。





5.1.2 　ベンダー資格


　特定ベンダーの製品内容についての技術を問うような問題が中心であり、狭く深く問う問題が多いです。そのため業務には直結しやすいです。

受験料が1,5万～5万程度で高価な試験が多いです。

受験時期は自分で決めて、テストセンターで受ける試験が多く、自分の好きな時期に受けることができます。



資格自体に有効期限があり、更新のための条件がついているものが大半です。更新のために試験の一部を再受験するので、スキルの再確認を行わされる場合が多いです。

保持し続けることは大変である反面、保有スキルが枯れていないことを証明できます。





5.2 オススメの資格


5.2.1 　基本情報技術者（国家資格）


　IPA（情報処理推進機構）という国の経済産業省の管理配下にある機関が開催しているIT技術試験です。



IPAではエンジニアのスキルレベルを7段階に階層分けしており、一言ずつで簡単にまとめると下記のようになっています。

 レベル７　世界で通用するプレーヤ（責任者）

 レベル6　国内のハイエンドプレーヤ（責任者）

 レベル5　企業内のハイエンドプレーヤ（責任者）

 レベル4　後進育成に貢献するハイレベルのプレーヤ（リーダー）

 レベル3　独力で遂行できるプレーヤ（メンバー）

 レベル2　上位者の指導の下に要求された作業を担当するプレーヤ（メンバー）

 レベル1　最低限必要な基礎知識を有するプレーヤ（メンバー）

この中でレベル４まで試験により能力を証明できるとしています。



基本情報技術者試験はレベル２であり、IT系の知識問題を中心に幅広く回答させる形式となっています。



● 対象者

IT業界を目指す人や新しく関わる人、IT業界に入社したての１～２年目程度の初心者向けです。よく使う用語や、考え方の基礎が理解できるようになります。



● 注意点

ITに関する幅広い内容が出題されるので、業務に直結するとは限りません。就く職種によっては全く見かけないような知識も問われます。



また、この資格を持っているからといって特別待遇されるようなことはあまりありません。実際筆者は大学新卒の採用活動に関わったことがありますが、このレベルの資格を持っていること自体の加点はほとんどありませんでした。



ただ、持っていることよりも強制されていない試験を受ける姿勢と、最低限の知識が保証されていることを評価します。新卒では最低限の知識すら無く手間がかかるのが当たり前ですが、その手間が大きくなるリスクを減らしてくれます。



新卒の場合であれば、あくまで個人的な感覚ですが初対面の印象が１００点満点中＋３点といったところです。

逆に言えば新卒以外ではほとんど効力がありません。自己研磨のための資格という意味では十分に効果があります。



よく見かけるレベル１に値する「ITパスポート」という試験がありますが、これは内容が簡単すぎるため新卒でもほぼ評価しません。

現役の高校生でも半分くらいが受かる試験はエンジニアにとって意味はありませんので、基本情報技術者試験レベル以上の試験を受けましょう。





5.2.2 　PMP（ベンダー資格）


　PMPとはProject Management Professionalというアメリカ企業主催のプロジェクトマネージメントに関する国際資格です。国内の試験ではIPAのレベル４の「プロジェクトマネージャー試験」が相当します。



官公庁や数億以上の大規模案件においては、PMが「プロジェクトマネージャー」もしくは「PMP」資格を保有していることが入札条件となっていることもあります。企業内での昇格条件として課せられている場合もあり、非常に有用な資格です。



● 対象者

プロジェクトマネージャー業務を行う４年目～何年目でも有効な試験です。

受験するのにいくつかの条件があり、

 （大卒の場合）4500時間以上（約２年）の対象実務経験

 （大卒の場合）36ヶ月以上のPM経験

 3５時間のPM研修

などが課されるため、早くても４年目くらいから受験資格を得られるようになります。若手でもこの試験を目標にステップアップを狙いましょう。



● 注意点

国際試験なので英語での申請や、証明書の提出など面倒な手続きが多いです。また３年間を更新サイクルとして、規定以上の研修や実務経験を証明できなければ失効してしまうので注意が必要です。



面倒事は多いですが、実際PMPを所有していると昇格や転職にとても有利であり、

簡単に大規模案件のPMとしても抜擢されます。それだけ認められた価値のある資格であるということです。



更新や手続きが面倒であれば国内の「プロジェクトマネージャー試験」の方を取得すればある程度同等の効果は得られます。しかし、PMPの方が知名度があります。また、PMP資格はIT系に限らず有効ですが、プロジェクトマネージャー試験はIT系に限った証明なので、有効範囲も異なります。

可能であればPMPの取得をオススメします。





5.2.3 　技術特化系資格（ベンダー資格）


　特定の分野に特化させた資格は、ベンダー資格で数多く用意されています。国家資格と違い、実際の現場で導入されている機器・技術ベースでの出題となるのでより業務に直結しやすいです。

自分がどの分野を勉強したいのかによってこのような特化系の資格を取得することは有効でしょう。



具体的な資格を紹介します。

● Linuxサーバー系　▶　LinuC（旧名LPIC）

LinuxOSに関わる知識や、コマンドを問う試験。3段階のレベル設定があります。サーバーを扱うつもりではなくてもLinuxOSを基に開発された機器は数多いので取得しておいても損はありません。



● ネットワーク系　▶　Cisco認定試験

ネットワーク機器で最も利用されているCisco社による認定試験。有線ネットワーク、無線ネットワーク、ネットワークセキュリティ、ネットワークデザインなど幅広い分野で細かいレベル設定で数多く試験が用意されています。



● データベース系　▶　Oracle認定試験

データベース技術で最も利用されているOracle社による認定試験。データベース管理能力とSQL（データベース言語）の能力を図ります。４段階のレベル設定があります。



● クラウド系　▶　AWS認定試験

クラウドサービスでは世界でトップクラスのシェアを獲得しているAmazon社によるAWSの認定試験。同じくトップクラスのMicrosoft社のAzureと比べると受験者が多く、試験対策方法も数多く公開されているのでクラウドを学ぶにはAWSから入るのをオススメします。



どの企業のクラウドサービスであっても基本の考え方は同じなので、AWSを理解している人であればAzureなどの他社サービスの理解も早くなります。

幅広いレベル設定で細かく試験が用意されています。他の試験よりも試験内容や試験範囲の改定が早いのが特徴です。





5.3 資格を取得するメリット


● 体系的に勉強ができるので知識の身につきが早い。

● 有効な資格であれば昇給、昇格、転職、などに有利。

● 企業によっては合格一時金のような手当がつく。

● 名刺、履歴書に記載してアピールができる。

● 知識の証明になる。

● 自信がつく。





5.4 資格を取得するデメリット


● 時間が取られてしまう。

● 資格を取ることが目的になりがちで、業務で使える知識がついていないことがある。

● 業務に効果がないことがある。

何もしないよりかは確実にプラスに働きますね。資格取得に時間が取られるのは仕方がありません。それ以外のデメリットは意識次第で改善できます。





5.5 資格は本当に必要なのか


場合によりますが、若手には必要で中堅以降は不要でしょう。



就職、転職、昇格のようなアピールの場がある人であれば有効な資格であれば持っていることがプラスに働くでしょう。



新しい分野を勉強したい、新しい職種にチャレンジしたい、仕事の幅を広げたいと思っている人には体系的に勉強できるのでプラスに働くでしょう

若手エンジニアに対して、強制的に資格を取得させる企業も多いです。



実際に筆者の経験では、保有している資格が有利に働き、新規案件獲得や案件内の特定のポジションを獲得したことがあります。

しかし、実際に資格を何も持っていなくても若くして大規模案件のPMに抜擢されたり、役職についていたり、業務を的確にこなしている人も存在します。



30代以降になったら資格よりも実務経験を重要視されるので、資格を持っていたところで実務経験やコミュニケーション能力に問題があればうまくいきません。



若手エンジニアや自分の領域を増やしたい人には資格は有効で、既に経験が豊富である人や、ある程度以上の年齢に達してしまった人は資格が不要で、実務経験を増やした方がいいというのが結論です。





第6章

　SEのギモン





6 SEのギモン


実際にエンジニアを経験しないとわからなかったことや、筆者が就職前に気になっていたことをQA形式で紹介していきます。





6.1 SEのよくある質問


6.1.1 　勤務時間について


Q1：残業って多いの？

A：納期直前であれば多くなります。

システムリリース直前や、構築期間中は多くなりがちです。しかし、最近はほとんどの企業で36（サブロク）協定という残業規定が厳しくなり、協定上1ヶ月の残業時間上限が45時間までとなっているので、近年はどの企業も残業時間が減っている傾向にあります。



中小企業であると36協定を締結していない企業もあるので、自分の就職する企業が36協定を締結しているかどうかは就職する上で気をつけるポイントといえるでしょう。



一般的には、社内SE＜SE＜PGという順で残業時間が多くなる傾向があるようです。



普段は比較的残業は少ないです。何も問題が起きていなければ定時で上る人も多いですが、PM系の人たちは連絡や手続きが多く日常的に残業が多くなる傾向があります。





Q2：深夜作業ってどれくらいあるの？

A：システムリリース前のテストや、システム移行作業時はどうしても顧客のシステム停止を伴うのでその時に発生します。一般的には1システムにつき1～３回程度です。



日常的に発生するものではなく、うまくリリースまでもっていけるシステムであればプロジェクト期間中で一回も深夜作業がないこともあります。一方で、全国に複数拠点があり、どの拠点のシステム停止も深夜に限定されれば2,3ヶ月くらいの間に毎週深夜作業を伴うこともあります。



こればっかりは案件特性によるのでわかりません。システム開発をやる上で深夜作業は仕方がないことなので避けられません。深夜手当が出ることと、シフトで平日昼間に休めることで納得しましょう。



ただ、SEの中でもネットワーク監視やヘルプデスクのような運用・保守専門職であれば交代制で勤務を行うので、深夜も休日でも仕事をしなければいけなくなります。





Q3：深夜作業ってどうなの？

A：めちゃくちゃ辛いです。新卒の20代前半の時でも辛かったです。

深夜作業がうまくいけば、無駄に多い作業合間の待機時間、深夜の謎のハイテンションになるおじさん、グロッキーになり顔色が異常に悪い人・・・



深夜作業がうまくいかなければ、トイレに行く時間すらまともにとれない（時間制約があるから）、焦りからどんどん悪くなる現場の雰囲気、問題が解決しなければ全て作業前に戻して顧客にごめんなさい報告と次週再チャレンジする恐怖・・・



地獄でした（個人的な意見です）

この地獄作業を定年まで続けるのは無理だと思って筆者はエンジニアからITコンサルタントに転職をしています。



人によっては「決められた作業を淡々とこなすだけだから楽」だとか、「満員電車に乗って会議だらけの企業に行くよりかはマシ」みたいな考えをする人もいるようです。





Q4：休日出勤は多いの？

A：深夜作業と同じく、システムリリース前のテストや、システム移行時の時間帯に制限があれば休日にやるしかありません。という同じ理由から1システムにつき1～３回程度です。



人によっては忙しすぎて休日に出て日常仕事を消化する人もいるでしょうが、それも36協定のおかげで最近は減っています。





6.1.2 　勤務場所について


Q5：普段どこで働くの？

A：基本はオフィスワークです。必要なときだけ顧客や協力会社先にいって打ち合わせをします。



構築やテストが始まれば現場に入ります。現場も何種類か存在します。

クラウドを利用する場合は現場に入ることはありません。PC上から構築もテストも完了してしまいます。



自社マシン室、ラボ：顧客環境に納品前に簡単なテストや設定導入をする環境。マシンだらけで寒く、空調の風が強く、うるさく、ほこりっぽい。

50台以上納品するような大規模案件の場合は工場や倉庫を間借りすることも多く、環境が悪いです。人間に適した場所ではないです。辛いです。



顧客マシン室：顧客の持っているマシン室であり、実際に納品する場所。マシンだらけで寒く、空調の風が強く、うるさいが自社マシン室よりかは比較的マシ。

しかし、顧客環境なので作業机や椅子がなかったり、顧客を呼ばなければ自由に出入りできなかったりと制約が多いです。人間に適した場所ではないです。辛いです。



データセンター：マシンが数千、数万台規模で並ぶマシンのための建物。大型案件や顧客がマシン室を持っていない場合はデータセンターの一部を借りてシステムを構築し、ネットワーク経由で顧客へシステムを提供する。



一般人が利用しているほとんどのサービスはどこかのデータセンターの実機から提供されています。住所も公開されておらず、建物に窓はついておらず、マシンだらけで寒く、空調の風が強く、マシンの稼働音が鳴り響いており、人間に適した場所ではないです。辛いです。



入館管理も厳しく、持ち物チェックや何重にも設置された監視扉を抜けるので、トイレも遠いです。できるだけ入りたくない場所の一つです。



現場はどこであっても人間に適した場所ではないです。強風、寒さ、ほこり、轟音で目鼻喉がやられるので、真夏でもマスクと上着が必須です。





Q6：リモートワークとかシフト勤務みたいに柔軟に働けるの？

A：比較的ゆるく、自宅勤務やシフト勤務が許されている企業が多いです。





6.1.3 　人について


Q7：文系出身だけど大丈夫？

A：大丈夫です。

理系や情報系学科出身はたしかに多いですが、有利なのは１年目の最初数ヶ月くらいでしょう。大学院でシステム開発に直結する内容を研究していた人でない限り、理系であっても業務に直結する内容はあまりありません。



１年もすれば理系、文系の垣根はなくなります。情報系の出身であるほうが採用で少し有利であるのは確かですが、コミュニケーション能力など他の要素を見てからの総合判断です。あまり気にする必要はありません。





Q8：オタクの人が多いの？

A：比較的多いです。

Web系企業やベンチャー企業であればイケイケな人が多い印象ですが、昔からあるシステム開発企業は比較的オタクと呼ばれるような理系っぽい見た目の人が多いです。

オタクとは真逆の人や、普通の人ももちろんいます。





Q9：男女比は？

A：SEの男女比は９：１～８：２くらいです。

「いやいやそんなことないでしょう、企業で公表されている男女比はもっと女性比率高いよ。」と思われるかもしれません。システム開発企業でも確かに企業に女性はもっといますが、ほとんどがエンジニア職以外の人です。





Q10：モテる？

A：女性であれば。

男性は圧倒的に数が余ってます。外にいっても余ったエンジニア男性はいっぱいいるのでモテるという観点では、残念ながらメリットは得られないでしょう。





Q11：コミュニケーション苦手なんだけどSE向いている？

A：向いていません。

むしろSEは顧客やベンダー企業、チーム内メンバーなどとコミュニケーションが頻繁に必要になる職種です。

技術系に特化したSEとなればPM系の人と比べればコミュニケーション能力は求められませんが、システム開発は必ず複数人で作り上げるものなので、コミュニケーション能力は必須です。



PGで、一人で完成させられる小規模のアプリ開発であればSEよりかコミュニケーションの機会は減るとは思いますが、コミュニケーション能力は高いほうがどの職種でも有利であることは確かです。





Q12：英語は使う？

A：英語の資料が多いので“読み”でよく使います。

最新の技術や機器、サービスはアメリカ企業から生まれてきます。そのため国内で実績が少ないものや、最新のものを導入するときは英語の資料がほとんどです。



海外の顧客を相手にするときはもちろん“読み”以外も使用しますが、そのようなプロジェクトの場合は英語が得意な人を窓口として用意するので、英語に苦手意識があったとしても問題はありません。



しかし、最近ではTOEICの点数を入社条件や昇格条件にしている企業も多いので

、英語ができたほうがいいでしょう。





6.1.4 　キャリアについて


Q13：将来性はあるの？

A：かなりあります。

IT化が進んでいく現代において、エンジニアは不滅の職種です。近年ではIoT化、クラウド化、人工知能の利用など、どこにいってもIT技術が利用されている社会になっています。



新しい仕組みや製品を開発したければPGになればいいですし、システムやインフラを作りたければエンジニアになれば食いっぱぐれることはありません。





Q14：勉強しなければいけないんでしょう？

A：ある程度は必要です。

資格の話でも出しましたが経験の薄い若手では必要であり、中堅以降であればあまり必要ありません。でもそれはIT業界に限ったことではありませんよね。やったことのない仕事をするには勉強するしかありません。



去年と同じ仕事しかできない人は昇給・昇格ができるわけがありません。お金が欲しいなら勉強することは避けられません。





Q15：技術の移り変わりが早くて大変？

A：人によってはそうです。

これも経験が薄いと技術の移り変わりについていくことに精一杯ですが、ある程度経験してくると技術が変わったとしても根本は同じだったり、似通った技術経験があったりするのですぐに習得できるようになります。



また、人によってはマネージメント系が得意で専門とするようになる人もいるので、マネージメント系の人は技術の移り変わりごとに勉強するようなことは比較的少ないです。多少でも知らないと話にならないので最低限の勉強は必要です。



ただ、これもIT業界に限ったことではないかと思います。どんな業界でも常に進化していますし、キャリアアップを目指す人はむしろ新しい技術や分野を増やしていくほうが、キャリア形成につながるでしょう。





6.1.5 　転職先について


Q16：転職先はどんなところ？

A：SEの転職先としては一般的には下記のような感じです。SEからの大きく変わるところについて紹介します。



● 社内SE

外出、残業、深夜・休日作業が減り安定した勤務になりやすいです。

給料は下がる傾向にあり、社内SEからの転職先は減ります。社内SEはシステム開発の顧客側の立場ですので、システム開発企業のSEよりか技術は身につきにくいためです。



● PG（プログラマー）

Web系の企業に就職して、管理や基盤構築中心だったSEから製品の中身の開発を担当するようになります。

システム開発時のようなシステム停止をともなうテストや移行による深夜・休日作業は減ります。給与は仕事内容次第です。



● セールスエンジニア

技術営業やプリセールスと呼ばれることもある営業とエンジニアの中間職です。システム開発の提案や、自社製品の提案をメインに行います。



営業職なので外出は増えますが、自分で構築をすることはないので案件確保につながったら終わりです。営業成績により手当がつくこともあるので、成績次第では給与が上る可能性がありますが、SEよりプレゼン能力が必要とされます。



● ITコンサルタント

顧客に対してIT技術を利用して経営戦略や業務改善、システム開発支援をメインに行います。



しかし、システム開発だって顧客に対してコンサルティングを行うこともあるので、実情はSEと同じような業務を行うことも多いです。

業務の幅が広くなり、難易度も上がるので給料は高くなります。ITコンサルタントについては長くなるので次章でも詳しく説明します。



● フリーランス

企業を通して案件を取得していたところを、企業を通さずにフリーランスエンジニア紹介企業からの紹介で案件に入るようになります。企業に属さないので自分の単価のほとんどが自分の手取りになります。



例えば

企業付属の場合は、単価月100万でも毎月の給料は基本給30万とかでしょう。

フリーランスの場合、単価月100万から仲介企業への手数料10～20％を引いた

80万くらいが毎月の給料に入ります。



実際に給料欲しさにSEとからフリーランスになる人は多いのですが、SEと比べてフリーランスのメリット、デメリットを紹介します。



メリット

● 収入が増える。

● 好きな仕事、現場を選べる。

● 企業に縛られないから自由にできる。

● 法人化すれば社会保険料が安くなる。

● いろんなものを経費として精算できるので、税金が安くなりやすい。



デリット

● 既に一人でこなせる仕事の案件にしか入れないから、仕事の幅が広がらない。

● 案件参加に年齢制限があることが多い。

● 給料は上がるが、高い案件は取りづらくなる。

今まで所属する企業の実績とサポートありきでの単価です。フリーでは完全に個人の成果になるので顧客から信用は得にくいです。

企業であれば単価月100万は若手でも簡単にもらえますが、個人であれば100万はかなり高い方になります。

● 案件に入らなければ給料がないので、不況時には仕事がなくなる。

どこも最初に切られるのは自社社員ではなく、立場の弱い外部の社員からです。お金がなければ自社社員で回すようになります。

● 体調不良時には有給もないので、基本は契約単価から減給される。

● 税金、経費精算、請求書、確定申告など事務処理を全て自分でやる。

● 社会的信用が低くなるので、クレジットカードが作りにくくなったり、住宅ローンが組みづらくなったりする。



筆者は実際にフリーランスエンジニアの人を多く見てきていますが、どの人も40歳前後でフリーランスをやめている人が多いです。

案件参加の年齢制限に引っかかるようになったり、将来の働き方に不安を感じたりして、システム開発企業に就職しなおしているようです。



自社社員であれば年齢制限はなく適切なポジションを与えられますが、フリーランスのような特別な外部社員の場合は35歳、40歳、50歳くらいで年齢制限を設けている案件があります。PMの年齢やメンバーの構成から、あまりに年上だと扱いにくいとされてしまうためです。



フリーランスでは2,30代でも簡単に年収1000万を超えられますが、40代以降は仕事をとれるかどうかもわかりません。同じ仕事しかしなくなるので、技術の移り変わりにも対応できなくなっているかもしれません。



大手のシステム開発企業や、ITコンサルティング企業であれば40代以降でも年収1000万代を狙えます。仕事も安定してもらえますし、案件が取れない時期でも給料は変わらずもらえます。



どうしても個人で自由にやりたい理由がなければフリーランスはあまりオススメできません。

副業の方が儲かっているとか、今後数十年もフリーで稼ぎ続ける自信があるのであればフリーランスでもいいでしょう。





6.1.6 　ITコンサルタントとの違いについて


Q17：SEとITコンサルタントの違いは？

A：経営戦略や業務改善のみを目的としたプロジェクトを担当したりするのはSEとの違いの一つです。



システム開発支援のプロジェクトを担当する場合は、「提案や要件定義」「PMやPMOとしての採用」のように難易度の高い部分でスポットでの短期間投入されることが多いです。SEよりも単価が高価であるためです。



システム開発でよくある例ですが、

一次請け企業上位SE：単価月170万、一般SE：単価月150万、

二次請け企業上位SE：単価月120万、一般SE：単価月100万、

三次請け企業上位SE：単価月80万、一般SE：単価月60万、

（実際には個人や職種に紐付いた金額になっている）



という嫌な階層構造をシステム開発企業はとっていますが、ITコンサルティング企業はこの一次受け企業に営業をかけて、一次受け企業から契約を取り、

コンサルティング企業上位コンサルタント：単価月250万、一般コンサルタント：単価月200万

なんて金額で契約を取ります。



一次受け企業もPM能力ができるものがいなかったり、システム開発に加えて業務改善もしてくれたりするというのでITコンサルタントを外部から取ってきます。



そのためITコンサルタントになるには、SE能力に加えて、経営戦略や業務改善に関する基礎知識、提案能力やコミュニケーション能力が求められます。



それでも単価が高いので顧客からは簡単に切られます。SEと変わらない働きしかできなければ安い二次受け以下のSEを増やせばいいのですから。



その分給料が多くなり、若くしてかなりの金額も稼げる上に、経営戦略を専門とした上位企業のコンサルタントを目指すことも可能になってきます。





具体的にITコンサルタントのモデルケースを紹介します。



表 6.1‑1　ITコンサルタントの年収モデルケース

年齢

年収



大卒25歳前後

500~600万



30歳前後

700~1000万



40歳前後（役職なし）

800~1200万



30~60（役職付き）※

1200~3000万



※完全に個人の能力主義の世界なので30歳で役職を得られるような人もいます。



実際のところSEの業務とあまり違いの見られないプロジェクトも多くあります。

提案から保守まで全てをITコンサルティング企業で受け持つため、構築や保守部隊を持っているITコンサルティング企業も存在します。



SEとITコンサルタントの違いは何かと言われれば目的と意識の違いでしょう。



極端な言い方ですが、

SEは営業が取ってきた顧客に対して、システムを構築することが目的です。

一方で、

ITコンサルタントは顧客に対して、最善のシステムを最善の方法で構築することで、顧客に成果を出すのが目的です。



具体的にITコンサルタントがSEと違い、遂行しなければいけないことは、

「ヒアリングしきれなかった要件・要望を聞き出して最適な実現方法を考えて、顧客のできないことを実現すること」

「最適な人員配置とタスク管理により効率的に構築することで、顧客のコストを削減すること」

「顧客が今まで苦労していた手順を標準化することで、誰でも簡単にこなせる手順として浸透させること」

などを実践していき、最終的に顧客に成果を見せつけることがITコンサルの目的です。



目的の達成のために、常日頃から勉強して前向きに取り組む意識により目的が達成できるものだと思います。



コンサルタントにはクライアントファーストと呼ばれる考え方があり、何をするにも常に顧客の利益を追求することが求められます。与えられた業務をタダこなすだけではコンサルタントとは呼べません。常に顧客に対して、気付きや改革を与えなければいけません。



SEよりかは厳しい環境になることは確実ですが、システム構築や保守を担当することをなくなるのでその分深夜・休日作業はなくなります。



業務内容が幅広く難易度が上がりますが、ITコンサルタントは個人の能力主義の世界なので成果が給料に反映されやすく、30歳にして年収1000万円も狙える職種です。

SEからのキャリアアップにはオススメです。





第７章

　契約形態の違い





7 契約形態の違い


IT業界はピラミッド構造を取りながらプロジェクトを進めるため、顧客以外とも様々な企業や個人と契約を交わします。

そこで、知っておいた方がいい契約形態の違いについて説明していきます。



工程・契約先により契約形態が異なります。一般的には下記のようになっています。



図 6.1.6‑1　工程ごとの契約形態



契約内容の違いを把握していることは自分のキャリア形成や働き方を考える上で必ず必要です。自分が顧客とどのような契約を結ぶかにより業務内容や働き方が異なってしまうからです。

まずは契約の種別について説明していきます。





7.1 契約内容


7.1.1 　派遣契約


雇用契約の一つで、特徴としては次の通りです。

● 発注者（一次請けなど）に指揮命令権がある

● 作業場所、作業時間の指定ができる

● 成果物の完成責任がない

● 瑕疵担保責任という欠陥があったら責任を負うことはない

● 再派遣は不可

● 労働期間に対する報酬を払う形態



正式には労働者派遣契約といいます。主に、グループ企業や下請け企業のような単価の安い人を派遣契約として雇うため、フェーズを問わず利用されます。



基本的には発注者と同じ現場で、発注者側の命令に従って業務を行うため、自社で

仕事をすることも、自社社員と仕事をすることもあまりないでしょう。一人で派遣されることも、自社内から複数人で派遣されることもあり得ます。



一人ひとりの労働時間に対して報酬を支払うので、基本は人ベースでの金額になります。





7.1.2 　準委任契約


業務委託契約と呼ばれるうちの一つで、特徴としては次の通りです。

● 発注者（一次請けなど）に指揮命令権がない

● 作業場所、作業時間の指定はできない

● 成果物の完成責任がない

● 瑕疵担保責任はない

● 業務の再委託は不可

● 労働期間に対する報酬を払う形態



主に提案や要件定義、運用保守フェーズにて外部会社と取り交わされます。

そのようなフェーズであれば明確な成果物が定義できないからです。設計やテストであれば、設計資料やテスト報告書などが明確な成果物として定義できます。



提案フェーズや要件定義フェーズでは、提案書や要件定義書の作成も行いますが、その他の見積もりやスケジュール資料などの付随資料も数多く作り、ヒアリングなどのコミュニケーションが主体でもあり、成果物の定義が難しくなるため準委任であることが一般的です。



成果物が難しいということは、担当することが難しいフェーズでもあるので単価の高いITコンサルタントのような外部社員に外注することが多いです。運用保守であれば、専門部隊や専門企業に委託することが多いです。



別名SES（System Engineering Service）とも呼ばれて、よく派遣契約と混同されがちですが、発注者側に指揮命令権がないことが大きな違いです。



従って、発注者側に常駐していたとしても発注者の指示により業務をしていれば法律違反となっていまいます。それを偽装請負と呼びます。準委任契約であっても偽装請負と呼びます。わかりにくいですよね。請負契約の場合によくやられてしまう偽装方法だからです。



しかし、実際のところ準委任契約であっても発注者側に常駐することが多く、発注者と話しながら仕事をすることがほとんどです。

あくまでも発注者と打ち合わせをして、自分の意志で必要な業務を遂行しているというテイで準委任契約をごまかしている企業がほとんどです。



準委任契約の場合は1人で顧客側に常駐することは派遣とみなされて偽装請負扱いされるので、２人以上で常駐するごまかし手法がとられています。



ちなみになぜ“準”委任なのかというと、法律に関する業務を委任する場合のみ委任契約と呼ばれ、それ以外の業務については全て準委任契約と呼ばれるからです。





7.1.3 　請負契約


業務委託契約と呼ばれるうちの一つで、特徴としては次の通りです。

● 発注者（一次請けなど）に指揮命令権がない。

● 作業場所、作業時間の指定はできない。

● 成果物の完成責任がある。

● 瑕疵担保責任がある。

● 業務の再委託は可能。

● 成果物に対する報酬を払う形態。



主に、基本設計、詳細設計、構築・テストフェーズのように成果物が明確に出てくるフェーズにて取り交わされます。



詳細設計以降になると実際に導入する機器のパラメータやコードについて設計することになります。そうすると、グループ企業の社員や、外部のITコンサルタントではなく導入機器の製造元メーカーなどに実際の業務を外注するようになります。製造元メーカーではなく、このような設計・構築フェーズに強い協力会社とパートナー企業契約を結んでいることもあります。

「実機の設計・構築はどの案件でもお願いするから安くしてね」という企業間の特別契約ですね。



準委任契約とは違い、成果物の完成責任と瑕疵担保責任を伴うのが特徴です。

基本は現場か自社オフィスにて作業を行い成果物の作成を担当しています。必要がある時に発注者元のオフィスに出向き打ち合わせ等を行います。



フェーズの特徴からしても頭を使う少数精鋭で取り組むのではなく、大人数による手作業のフェーズになるので3、4人以上のチーム体制で請負契約を組むことが多いです。





7.1.4 　業務委託契約と濁す契約


　業務委託契約とは本来、準委任契約と請負契約のどちらかに分類されるはずなのですが、業務委託契約と濁して準委任か請負かはっきりさせないで契約する場合もあります。



どちらなのか問われれば都合の良い方に解釈してもらえるように、あえて明記せずに契約書を作成しているためです。

偽装請負を回避はしたいが、発注者側に常駐させて担当させたい業務がある時に用いられる手法です。



IT業界で昔から続いている手法なので仕方がありませんが、もし自分がそのような契約書を交わさなければいけなくなったら、準委任なのか請負なのかを営業にはっきりさせましょう。発注者側に監査が入り偽装請負のチェックを行っている企業も多いです。自分が加担するような動き方をしないように注意が必要です。



でも、「偽装請負だからやれません！」なんて言い方はせずに「偽装請負にならないように、上長と組ませてプロジェクトを参加させてくれ」とか「他のプロジェクトも並行しているから常駐はできない」みたいにうまく回避しましょう。





7.2 契約内容の違いまとめ


　派遣契約、準委任契約（SES）、請負契約の違いをまとめると下記のようになっています。

表 7.2‑1　契約内容の違いまとめ

契約種別

契約目的

発注者の指揮命令系統

完成責任

瑕疵担保責任

再委託



派遣

労働者派遣

あり

なし

不可



準委任

労働力提供

なし

なし

不可



請負

成果物作成

なし

あり

可能





7.3 契約内容には注意


　どんな契約形態であっても自分が契約書にサインする場合は、契約内容を十分に確認しましょう。



どのような成果物や業務を求められているかも知らずに、準委任や請負契約を結ぶと契約内容を遂行できずにトラブルにつながってしまいます。



どの契約が良いというようなことはありませんが、ここで出てきた契約形態は全て発注“先”側であるということです。



そのため、発注者“元”に常駐しなければいけなかったり、発注者元と同じ仕事をしているのに発注者元よりも給料が低かったりと、発注先の立場は弱い傾向にあります。

どの企業で働くかはIT業界においてとても重要ですね。





第8章

　あとがき





8 あとがき


8.1 さいごに


この本を読んで頂きありがとうございます。

筆者がSEやITコンサルタントとして働いてきた中で疑問に思っていたことや、こんな内容があればありがたいと思ったことを説明しています。



この本で書いた内容は、就職前や転職前に知っておいたほうが良いことでもあります。

実際のSEやITコンサルタントの面接でも

「マネージメント系と技術系どっちをやってみたい？」とか、

「SEの具体的な業務を説明してみて？」とか、

「SEとITコンサルタントの違いってなんだと思う？」って質問が多いんですよね。この質問を面接相手にしてみても、明確な答えが帰ってくることはあまりありません。



IT業界に関わったばかりの若手社会人、就職・転職を控えている人たちのために

少しでもお力になれれば幸いです。





8.2 自己紹介


菅原文造（すがわらぶんぞう）



外資系システム開発企業に新卒で就職し、インフラ系エンジニアとして活躍するも、外資系のイメージとはかけ離れたゴリゴリな縦社会文化と深夜作業・出張の連続が嫌になり退職。

コンサルティング企業に転職し、システム開発系の技術支援、PM支援を中心に、IT経営戦略・業務改善提案にも従事する。

新規顧客への営業から、自分でPMをこなし若手コンサルタントを10人以上投入し、０から毎月2000万以上の売上を1年以上達成した経験がある。



主な保有資格として

・ITストラテジスト

・プロジェクトマネージャー

・情報処理安全確保支援士

・AWSソリューションアーキテクト

・Cisco やLinux系のベンダー資格など。





8.3 奥付




SEの入門書





第1版発行　2021年７月9日



筆者：菅原文造





※本作品の全部または一部を無断で複製・転載・配信・送信することを禁止します。

また、本作品の内容を無断で改変・改ざんを行うことも禁止します。

購入時にご承諾頂いた規約により、有償・無償に関わらず本作品を第三者に譲渡することはできません。





